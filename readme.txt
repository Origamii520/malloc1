代码逻辑和输出
my_malloc、my_free 和 my_realloc 仍然会打印分配、释放内存块时的相关信息。
printFreeList 会显示空闲块链表的当前状态。
coalesce 函数在合并相邻空闲块时会输出合并信息。

主要功能：
内存分配 (my_malloc)：
my_malloc 函数首先会对请求的内存大小进行对齐处理，以确保内存地址是对齐的，优化性能。
然后，遍历空闲链表查找合适的空闲内存块。如果找到足够大的块，它将分配该块，并将剩余部分（如果有）拆分成一个新的空闲块。
如果空闲链表中没有足够的内存，使用 malloc 向操作系统请求新的内存块。

内存释放 (my_free)：
my_free 函数会将释放的内存块重新加入到空闲链表，并尝试合并相邻的空闲块，以避免内存碎片的产生。
每次释放内存后，程序会打印当前空闲块链表的状态，帮助跟踪内存的变化。

内存重分配 (my_realloc)：
my_realloc 实现了内存重分配的功能。它首先尝试分配新的内存块，然后将旧内存中的数据复制到新内存块中，最后释放旧的内存块。
通过这种方式，程序能够在不需要手动处理内存的情况下，扩展或缩小内存的大小。

内存合并：
当释放内存时，coalesce 函数会检查相邻的空闲块，如果它们是相邻的，程序会将它们合并成一个更大的空闲块，从而减少内存碎片。

输出：
在每次内存分配、释放和合并时，程序会输出详细的信息，包括内存块的大小、分配的来源（是从空闲链表还是通过 malloc 请求的），以及空闲链表的当前状态。